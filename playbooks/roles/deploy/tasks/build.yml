---
- include_tasks: "{{ include_path }}"
  with_items: "{{ deploy_build_before | default([]) }}"
  loop_control:
    loop_var: include_path
  tags: deploy-build-before

- name: Copy project templates
  delegate_to: "{{ deploy_container_name }}"
  template:
    src: "{{ item.src }}"
    dest: "{{ deploy_helper.new_release_path }}/{{ item.dest }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items: "{{ project.project_templates | default(project_templates) }}"

- name: Check if project folders exist
  delegate_to: "{{ deploy_container_name }}"
  stat:
    path: "{{ project_root }}/releases/{{ deploy_helper.previous_release }}/{{ item }}"
  register: project_folder_paths
  with_items: "{{ project.project_copy_folders | default(project_copy_folders) }}"

- name: Copy project folders
  delegate_to: "{{ deploy_container_name }}"
  command: cp -rp {{ project_root }}/releases/{{ deploy_helper.previous_release }}/{{ item.item }} {{ deploy_helper.new_release_path }}
  with_items: "{{ project_folder_paths.results }}"
  when: item.stat.exists

- include_tasks: "{{ include_path }}"
  with_items: "{{ deploy_build_after | default([]) }}"
  loop_control:
    loop_var: include_path
  tags: deploy-build-after
